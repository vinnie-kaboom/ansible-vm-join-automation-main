---
# Domain Validation Playbook
# Comprehensive validation of domain join status and configuration

- name: Domain Join Validation
  hosts: "{{ (lookup('file', '/workspace/configs/project_config.yml') | from_yaml).target_vm.name }}-join"
  gather_facts: yes
  vars:
    project_config: "{{ lookup('file', '/workspace/configs/project_config.yml') | from_yaml }}"
    # Override admin_user with the actual variable passed from vm_config
    project_config_override:
      domain:
        name: "{{ config_domain_name | default(project_config.domain.name) }}"
        admin_user: "{{ domain_admin_user | default('') }}"

  tasks:
    - name: Debug - Show working directory and file paths
      debug:
        msg: |
          ðŸ“‹ Container Environment:
          Working Directory: {{ ansible_env.PWD | default('UNKNOWN') }}
          Current User: {{ ansible_env.USER | default('UNKNOWN') }}
      tags: validation
      run_once: true

    - name: Set final project config
      set_fact:
        project_config: "{{ project_config | combine(project_config_override, recursive=True) }}"
      tags: validation

    - name: Debug - Show loaded configuration
      debug:
        msg: |
          ðŸ“‹ Configuration Loaded:
          Domain: {{ project_config.domain.name | default('NOT_SET') }}
          Admin User: {{ project_config.domain.admin_user | default('NOT_SET') }}
          System: {{ ansible_system | default('UNKNOWN') }}
          Raw domain_admin_user: {{ domain_admin_user | default('NOT_SET') }}
      tags: validation

    - name: Execute domain validation checks
      include_tasks: /workspace/roles/provisioning/join_validation/tasks/main.yml
      tags: validation
